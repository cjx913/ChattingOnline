javax.validation.constraints.AssertFalse.message=must be false  
javax.validation.constraints.AssertTrue.message=must be true  
javax.validation.constraints.DecimalMax.message=must be less than or equal to {value}  
javax.validation.constraints.DecimalMin.message=must be greater than or equal to {value}  
javax.validation.constraints.Digits.message=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)  
javax.validation.constraints.Future.message=must be in the future  
javax.validation.constraints.Max.message=must be less than or equal to {value}  
javax.validation.constraints.Min.message=must be greater than or equal to {value}  
javax.validation.constraints.NotNull.message=may not be null  
javax.validation.constraints.Null.message=must be null  
javax.validation.constraints.Past.message=must be in the past  
javax.validation.constraints.Pattern.message=must match "{regexp}"  
javax.validation.constraints.Size.message=size must be between {min} and {max}  
org.hibernate.validator.constraints.CreditCardNumber.message=invalid credit card number  
org.hibernate.validator.constraints.Email.message=not a well-formed email address  
org.hibernate.validator.constraints.Length.message=length must be between {min} and {max}  
org.hibernate.validator.constraints.NotBlank.message=may not be empty  
org.hibernate.validator.constraints.NotEmpty.message=may not be empty  
org.hibernate.validator.constraints.Range.message=must be between {min} and {max}  
org.hibernate.validator.constraints.SafeHtml.message=may have unsafe html content  
org.hibernate.validator.constraints.ScriptAssert.message=script expression "{script}" didn't evaluate to true  
org.hibernate.validator.constraints.URL.message=must be a valid URL  

## custom constraints
UserModelDriven.account.Pattern=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u8D26\u53F7
UserModelDriven.name.Pattern=\u8BF7\u8F93\u51654-6\u4F4D\u5B57\u6BCD\u3001\u6570\u5B57\u6216\u4E0B\u5212\u7EBF
UserModelDriven.password.Pattern=\u8BF7\u8F93\u51658-16\u4F4D\u5B57\u6BCD\u3001\u6570\u5B57\u6216\u4E0B\u5212\u7EBF
UserModelDriven.gender.Pattern=\u8BF7\u9009\u62E9\u6B63\u786E\u7684\u9009\u9879
UserModelDriven.age.Min=\u5E74\u9F84\u57281-120\u4E4B\u95F4
UserModelDriven.age.Max=\u5E74\u9F84\u57281-120\u4E4B\u95F4
UserModelDriven.birth.Past=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u65E5\u671F
UserModelDriven.eMail.Email=\u8BF7\u8F93\u5165\u6B63\u786E\u7684e_mail
UserModelDriven.phone.Pattern=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u53F7\u7801
UserModelDriven.year.Min=\u8BF7\u8F93\u51651900-2018\u7684\u5E74\u4EFD
UserModelDriven.year.Max=\u8BF7\u8F93\u51651900-2018\u7684\u5E74\u4EFD
UserModelDriven.moon.Min=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u6708\u4EFD
UserModelDriven.moon.Max=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u6708\u4EFD
UserModelDriven.day.Min=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u5929\u6570
UserModelDriven.day.Max=\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u5929\u6570
UserModelDriven.VerifyCode=\u9A8C\u8BC1\u7801\u9519\u8BEF\uFF01